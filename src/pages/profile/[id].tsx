import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import api from "../../../utils/axios";
import Loading from "@/components/spin";
import { Avatar, Button } from "antd";
import { UserOutlined } from "@ant-design/icons";
import { useQuery } from "@tanstack/react-query";
import slugify from "slugify";
import Link from "next/link";
import Head from "next/head";
import LayoutPage from "@/components/layout/layoutPage";
const fetchAPIDetailUser = async ({ queryKey }: { queryKey: any }) => {
  const [, id] = queryKey;
  const { data } = await api.get(`/users/${id}`);
  return data;
};
const fetchAPIListBlog = async ({ queryKey }: { queryKey: any }) => {
    const [, id] = queryKey;
    const { data } = await api.get(`/users/${id}/posts`);
    return data;
  };
const ProfileUser: React.FC = () => {
  const router = useRouter();
  const [detailBlog, setDetailBlog] = useState<any>(null);
  const id = router.query.id;
  const {
    data: detailUser,
    isError,
    isLoading,
  } = useQuery({
    queryKey: ["detailUser", id],
    queryFn: fetchAPIDetailUser,
    enabled: !!id,
  });
  const {
    data: listBlog,
  } = useQuery({
    queryKey: ["listBlog", id],
    queryFn: fetchAPIListBlog,
    enabled: !!id,
  });
  if (isLoading) return <Loading />;
  if (isError) return <p>Terjadi kesalahan saat mengambil data</p>;
  return (
    <>
      <Head>
        <title>Blog-Synapsis</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <LayoutPage>
        <div className="flex flex-col h-full lg:flex-row">
          <div className="w-full h-full shadow-md border-r-[1px] border-border/50">
            {detailUser && (
              <div className="flex gap-5 border-b-[1px] border-border/50 p-5">
                <div className="rounded-full h-[150px] w-[150px] bg-lightGray/50">
                  <Avatar size={150} icon={<UserOutlined />} />
                </div>
                <div
                  style={{ padding: "12px", border: "0px", color: "white" }}
                  className="flex-grow flex flex-col font-poppins rounded-none bg-transparent text-white"
                >
                  <h3 className="font-semibold text-base lg:text-xl mb-1 text-subtleGray">
                    {detailUser.name}
                  </h3>
                  <p className=" text-xs lg:text-sm line-clamp-3 text-subtleGray/70">{`Id: ${detailUser.id}`}</p>
                  <p className=" text-xs lg:text-sm line-clamp-3 text-subtleGray/70">{`Gender: ${detailUser.gender}`}</p>
                  <p className=" text-xs lg:text-sm line-clamp-3 text-subtleGray/70">{`Email: ${detailUser.email}`}</p>
                  {/* <Button className=" text-center rounded-lg p-1 flex-grow w-full mt-3 text-primerText bg-lightGray/80 border-0 hover:bg-lightGray hover:!text-primerText p3">
                    Edit Profile
                  </Button> */}
                  <Link href={`/profile/update/${id}`} className=" text-center rounded-lg p-1 flex-grow w-full mt-3 text-primerText bg-lightGray/80 border-0 hover:bg-lightGray hover:text-primerText p3">
                    Edit Profile
                  </Link>
                </div>
              </div>
            )}
            {listBlog && listBlog.length > 0 ? 
                (
                    <div className="flex flex-col">
                        {listBlog?.map((blog:any, index:number)=>(
                            <div className=" p-3 border-b-[1px] border-border/50 text-subtleGray" key={index}>
                                <p className="font-semibold text-lg">{blog.title}</p>
                                <p className="text-lightGray/50">{blog.body}</p>
                            </div>
                        ))}
                    </div>
                ):(
                    <>data tidak ditemukan</>
                )
            }
          </div>
          {/* <div className="lg:block hidden h-fit lg:w-[30%] lg:m-3 rounded-2xl border-2 border-border/50 shadow-lg font-poppins">
            <h2 className="font-semibold text-2xl text-center p-3 rounded-t-lg text-subtleGray/90">
              Recent Article
            </h2>
            <div className="bg-transparent flex flex-col">
              {lastArticle.map((post: any, index: number) => {
                if (post.title.toLowerCase() !== slug) {
                  return (
                    <Link
                      href={`/blog/${slugify(post.title, {
                        lower: true,
                      })}?page=${page}`}
                      className="p-3 text-subtleGray/90 hover:text-white hover:shadow-md hover:bg-gray-900/50"
                      key={index}
                    >
                      <h3 className="font-semibold text-xl">{post.title}</h3>
                      <h3 className="text-lightGray/50 text-sm">{post.body}</h3>
                    </Link>
                  );
                }
              })}
            </div>
          </div> */}
        </div>
      </LayoutPage>
    </>
  );
};
export default ProfileUser;
