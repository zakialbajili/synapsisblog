import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import api from "../../../utils/axios";
import Loading from "@/components/spin";
import { useQuery } from "@tanstack/react-query";
import slugify from "slugify";
import Link from "next/link";
import Head from "next/head";
import LayoutPage from "@/components/layout/layoutPage";
const fetchAPI = async ({ queryKey }: { queryKey: any }) => {
  const [, page] = queryKey;
  const { data } = await api.get(`/posts?page=${page}`);
  return data;
};
const Detail: React.FC = () => {
  const router = useRouter();
  const [detailBlog, setDetailBlog] = useState<any>(null);
  const page = router.query.page;
  // const perPages = router.query.per_page;
  const {
    data: posts,
    isError,
    isLoading,
  } = useQuery({
    queryKey: ["posts", page],
    queryFn: fetchAPI,
  });
  const lastArticle = posts?.slice(0, 4) || [];
  let slug = router.query.slug;
  if (typeof slug === "string") {
    slug = slug.split("-").join(" ");
  }
  useEffect(() => {
    console.log(slug);
    if (posts) {
      const getBlog = posts.filter(
        (article: any) => article.title.toLowerCase() === slug
      );
      setDetailBlog(getBlog[0]);
    }
  }, [posts, slug]);
  if (isLoading) return <Loading />;
  if (isError) return <p>Terjadi kesalahan saat mengambil data</p>;
  return (
    <>
      <Head>
        <title>Blog-Synapsis</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <LayoutPage>
        <div className="flex flex-col h-full lg:flex-row">
          <div className="w-full lg:w-[70%] h-full shadow-md  p-5 border-r-[1px] border-border/50">
            {detailBlog && (
              <div
                style={{ padding: "12px", border: "0px", color: "white" }}
                className="font-poppins rounded-none bg-transparent text-white hover:bg-gray-900/30"
              >
                <h3 className="font-semibold text-base lg:text-lg mb-1 text-subtleGray">
                  {detailBlog.title}
                </h3>
                <div className=" text-xs lg:text-sm line-clamp-3 text-subtleGray/70">{`${detailBlog.body}`}</div>
              </div>
            )}
          </div>
          <div className="lg:block hidden h-fit lg:w-[30%] lg:m-3 rounded-2xl border-2 border-border/50 shadow-lg font-poppins">
            <h2 className="font-semibold text-2xl text-center p-3 rounded-t-lg text-subtleGray/90">
              Recent Article
            </h2>
            <div className="bg-transparent flex flex-col">
              {lastArticle.map((post: any, index: number) => {
                if (post.title.toLowerCase() !== slug) {
                  return (
                    <Link
                      href={`/blog/${slugify(post.title, {
                        lower: true,
                      })}?page=${page}`}
                      className="p-3 text-subtleGray/90 hover:text-white hover:shadow-md hover:bg-gray-900/50"
                      key={index}
                    >
                      <h3 className="font-semibold text-xl">{post.title}</h3>
                      <h3 className="text-lightGray/50 text-sm">{post.body}</h3>
                    </Link>
                  );
                }
              })}
            </div>
          </div>
        </div>
      </LayoutPage>
    </>
  );
};
export default Detail;
