import Image from "next/image";
import Head from "next/head";
import { useRouter } from "next/router";
import { Button, Input, App } from "antd";
import { useState } from "react";
import { useMutation } from "@tanstack/react-query";
import api from "../../utils/axios";
const Register: React.FC = () => {
  const [formData, setFormData] = useState({
    email: "",
    name: "",
    password: "",
    confirmationPassword: "",
    gender: "male",
    status: "active"
  });
  const router = useRouter()
  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };
  const {message} = App.useApp()
  const mutation = useMutation({
    mutationFn: async (data: FormData) => {
      const response = await api.post("/users", data);
      const collectData = {...response.data, "password":formData.password}
      localStorage.setItem('dataPersonal', JSON.stringify(collectData))
      return response.data;
    },
    onSuccess: () => {
      message.success("Registrasi berhasil!");
      router.push('/login')
    },
    onError: () => {
      message.error("Terjadi kesalahan saat registrasi.");
    },
  });
   // Handle submit
  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!formData.email || !formData.name || !formData.password || !formData.confirmationPassword) {
      message.error("Semua field harus diisi!");
      return;
    }
    if (formData.password !== formData.confirmationPassword) {
      message.error("Password dan konfirmasi password harus sama!");
      return;
    }
    
    const form = new FormData();
    form.append("email", formData.email);
    form.append("name", formData.name);
    form.append("gender", formData.gender);
    form.append("status", formData.status);
    mutation.mutate(form);
  };
  return (
    <>
      <Head>
        <title>Synapsis Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          type="image/x-icon"
          href="/assets/images/logo_synapsis.png"
        ></link>
      </Head>
      <main className="w-full min-h-screen bg-black flex items-center justify-center text-white">
        <form onSubmit={handleSubmit} className="w-[80%] border-[1px] border-border/50 rounded-2xl p-5 flex flex-wrap gap-10 justify-between">
          <div className="flex-grow flex flex-col items-center md:items-start justify-center gap-5">
            <Image
              src="/assets/images/logo_synapsis.png"
              alt="Logo Synapsis"
              width={45}
              height={45}
              fetchPriority={"high"}
              className=" w-[100px] h-[100px] lg:w-[200px] lg:h-[200px]"
            />
            <h1 className="text-2xl lg:text-6xl text-center md:text-start text-wrap font-semibold">
              Welcome to <br /> Synapsis Blog
            </h1>
          </div>
          <div className="flex-grow lg:w-[50%] flex flex-col gap-5 justify-center">
            <h1 className="text-3xl">Register</h1>
            <Input
              name="email"
              type="email"
              placeholder="Masukan Email"
              className=" placeholder:!text-lightGray/50 !bg-transparent focus:outline-1 !text-lightGray/80  rounded-lg focus:px-3 border-[1px] border-border/50 !p-2 focus:!bg-transparent"
              value={formData.email}
              onChange={handleChange}
            />
            <Input
              name="name"
              type="text"
              placeholder="Masukan Nama "
              className=" placeholder:!text-lightGray/50 !bg-transparent focus:outline-1 !text-lightGray/80  rounded-lg focus:px-3 border-[1px] border-border/50 !p-2 focus:!bg-transparent"
              value={formData.name}
              onChange={handleChange}
            />
            <Input
              name="password"
              type="password"
              placeholder="Masukan Password "
              className=" placeholder:!text-lightGray/50 !bg-transparent focus:outline-1 !text-lightGray/80 rounded-lg focus:px-3 border-[1px] border-border/50 !p-2 focus:!bg-transparent"
              value={formData.password}
              onChange={handleChange}
            />
            <Input
              name="confirmationPassword"
              type="password"
              placeholder="Masukan Confirmation Password "
              className=" placeholder:!text-lightGray/50 !bg-transparent focus:outline-1 !text-lightGray/80 rounded-lg focus:px-3 border-[1px] border-border/50 !p-2 focus:!bg-transparent"
              value={formData.confirmationPassword}
              onChange={handleChange}
            />
            <Button htmlType="submit" loading={mutation.isPending} className="!p-5 !font-poppins bg-lightGray hover:!bg-softBlue hover:!text-white hover:!border-0">
              Register
            </Button>
          </div>
        </form>
      </main>
    </>
  );
};
export default Register;
